CREATE TABLE student (
  snum   CHAR(8) PRIMARY KEY NOT NULL,
  sname  CHAR(10)            NOT NULL,
  ssex   CHAR(2),
  sage   INT,
  dname  CHAR(10),
  sclass CHAR(6)
);

CREATE TABLE course (
  cnum     CHAR(3) PRIMARY KEY NOT NULL,
  cname    CHAR(12)            NOT NULL,
  chours   INT,
  credit   FLOAT(1),
  Csemster INT
);

CREATE TABLE SC
(
  snum  CHAR(8) NOT NULL,
  cnum  CHAR(3) NOT NULL,
  score FLOAT(1),
  PRIMARY KEY (snum, cnum),
  FOREIGN KEY (snum) REFERENCES student (snum),
  FOREIGN KEY (cnum) REFERENCES course (cnum)
);

INSERT INTO student VALUES (
  "98030101", "张三", "男", 20, "计算机", "980301"
);
INSERT INTO student VALUES (
  "98030102", "张四", "女", 20, "计算机", "980301"
);
INSERT INTO student VALUES (
  "98030103", "张五", "男", 19, "计算机", "980301"
);
INSERT INTO student VALUES (
  "98040201", "王三", "男", 20, "自动控制", "980402"
);
INSERT INTO student VALUES (
  "98040202", "王四", "男", 21, "自动控制", "980402"
);
INSERT INTO student VALUES (
  "98040203", "王五", "女", 20, "自动控制", "980402"
);
INSERT INTO student VALUES (
  "98020101", "李三", "女", 18, "能源", "980201"
);
INSERT INTO student VALUES (
  "98020103", "李五", "男", 19, "能源", "980201"
);

INSERT INTO course VALUES ("001", "数据库", 40, 6, 1);
INSERT INTO course VALUES ("002", "数据结构", 40, 6, 3);
INSERT INTO course VALUES ("003", "编译原理", 40, 6, 7);
INSERT INTO course VALUES ("004", "C语言", 40, 6, 7);
INSERT INTO course VALUES ("005", "计算机网络", 40, 5, 7);
INSERT INTO course VALUES ("006", "高等数学", 80, 10);


1：查询所有学生信息。
SELECT *
FROM student;

2：查询计算机系所有学生的姓名、年龄。
SELECT
  sname,
  sage
FROM student
WHERE dname = "计算机";

3：查询所有课程的学时数
SELECT
  cname,
  chours
FROM course;

4：查询成绩在80~90（>=80,<=90）分之间的学生的选课信息(学号、课程号和成绩)。
SELECT
  snum,
  cnum,
  score
FROM SC
WHERE score >= 80 AND score <= 90;

5：查询计算机系年龄为20岁的女学生的姓名；
SELECT sname
FROM student
WHERE sage = 20 AND ssex = "女" AND dname = "计算机";

6：查询并列出所有系名（不重复）
SELECT DISTINCT dname
FROM student;

7：查询成绩在85分以上的学生姓名、课程号和成绩；
SELECT DISTINCT
  sname,
  SC.cnum,
  score
FROM student, SC
WHERE student.snum = SC.snum AND SC.score > 85;

8：查询有多少个同学姓’王’；
SELECT count(sname)
FROM student
WHERE sname LIKE "王%";

9：查询数据库课程的最高成绩；
SELECT max(score)
FROM SC, course
WHERE SC.cnum = course.cnum AND cname = "数据库";

10：将学生的成绩按课号升序，成绩降序排列
SELECT *
FROM SC
ORDER BY cnum
  ASC, score
  DESC;

11：统计每个学生选修的课程数
SELECT
  snum,
  count(cnum)
FROM SC
GROUP BY (snum);

12：统计选课平均分低于80的学号
SELECT
  snum,
  avg
FROM (SELECT
        snum,
        avg(score) AS avg
      FROM SC
      GROUP BY snum)
WHERE avg < 80;
12：统计选课平均分低于80的学号
SELECT snum
FROM SC
GROUP BY snum
HAVING avg(score) < 80;

13：查询计算机系考试单科成绩最高的学生的姓名(不考虑课程号)
SELECT sname
FROM student
  JOIN SC ON student.snum = SC.snum
WHERE score IN (SELECT max(score)
                FROM SC);
